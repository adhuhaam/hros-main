// Main Application JavaScript
document.addEventListener('DOMContentLoaded', function() {
    // Initialize all app functionality
    initApp();
});

function initApp() {
    // Initialize real-time clock
    initClock();
    
    // Initialize notifications
    initNotifications();
    
    // Initialize tooltips
    initTooltips();
    
    // Initialize loading states
    initLoadingStates();
}

function initClock() {
    const timeElement = document.getElementById('currentTime');
    if (timeElement) {
        function updateClock() {
            const now = new Date();
            const options = { 
                year: 'numeric', 
                month: 'short', 
                day: 'numeric', 
                hour: '2-digit', 
                minute: '2-digit', 
                second: '2-digit' 
            };
            timeElement.textContent = now.toLocaleString('en-US', options);
        }
        
        updateClock(); // Initialize immediately
        setInterval(updateClock, 1000);
    }
}

function initNotifications() {
    // Simulate notification count
    const notificationBadge = document.querySelector('.notification');
    if (notificationBadge) {
        // You can update this with real notification count from server
        const notificationCount = Math.floor(Math.random() * 5) + 1;
        notificationBadge.textContent = notificationCount;
        notificationBadge.style.display = notificationCount > 0 ? 'block' : 'none';
    }
}

function initTooltips() {
    // Initialize tooltips for elements with data-bs-toggle="tooltip"
    const tooltipElements = document.querySelectorAll('[data-bs-toggle="tooltip"]');
    tooltipElements.forEach(element => {
        element.addEventListener('mouseenter', function() {
            const tooltip = document.createElement('div');
            tooltip.className = 'tooltip';
            tooltip.innerHTML = `
                <div class="tooltip-arrow"></div>
                <div class="tooltip-inner">${this.getAttribute('title')}</div>
            `;
            document.body.appendChild(tooltip);
            
            const rect = this.getBoundingClientRect();
            tooltip.style.position = 'absolute';
            tooltip.style.top = (rect.top - tooltip.offsetHeight - 5) + 'px';
            tooltip.style.left = (rect.left + rect.width / 2 - tooltip.offsetWidth / 2) + 'px';
            tooltip.style.display = 'block';
            
            this._tooltip = tooltip;
        });
        
        element.addEventListener('mouseleave', function() {
            if (this._tooltip) {
                this._tooltip.remove();
                this._tooltip = null;
            }
        });
    });
}

function initLoadingStates() {
    // Add loading state to buttons and forms
    const forms = document.querySelectorAll('form');
    forms.forEach(form => {
        form.addEventListener('submit', function() {
            const submitBtn = form.querySelector('button[type="submit"]');
            if (submitBtn) {
                submitBtn.classList.add('loading');
                submitBtn.disabled = true;
                submitBtn.innerHTML = '<span class="spinner-border spinner-border-sm me-2"></span>Loading...';
            }
        });
    });
}

// Utility functions
function showAlert(message, type = 'info') {
    const alertDiv = document.createElement('div');
    alertDiv.className = `alert alert-${type} alert-dismissible fade show`;
    alertDiv.innerHTML = `
        ${message}
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    `;
    
    const container = document.querySelector('.container-fluid');
    if (container) {
        container.insertBefore(alertDiv, container.firstChild);
        
        // Auto-remove after 5 seconds
        setTimeout(() => {
            alertDiv.remove();
        }, 5000);
    }
}

function formatNumber(num) {
    return num.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
}

function formatDate(dateString) {
    const date = new Date(dateString);
    return date.toLocaleDateString('en-US', {
        year: 'numeric',
        month: 'short',
        day: 'numeric'
    });
}

function formatDateTime(dateString) {
    const date = new Date(dateString);
    return date.toLocaleString('en-US', {
        year: 'numeric',
        month: 'short',
        day: 'numeric',
        hour: '2-digit',
        minute: '2-digit'
    });
}

// AJAX utility functions
function makeRequest(url, options = {}) {
    const defaultOptions = {
        method: 'GET',
        headers: {
            'Content-Type': 'application/json',
        },
        ...options
    };
    
    return fetch(url, defaultOptions)
        .then(response => {
            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }
            return response.json();
        })
        .catch(error => {
            console.error('Request failed:', error);
            showAlert('An error occurred while processing your request.', 'danger');
            throw error;
        });
}

// Export functions for global use
window.App = {
    initApp,
    showAlert,
    formatNumber,
    formatDate,
    formatDateTime,
    makeRequest
};